.dots = setNames(dots,names)
)
} %>%
{
dateframe <- data.frame(date = seq.Date(from = min(.$date), to = Sys.Date(), by = 1))
merge(., dateframe, all = T)
} %>%
{
.[is.na(.)] <- 0
return(.)
} %>%
melt(
id.vars = "date"
, variable.name = "user_class"
, value.name = "number_of_signups"
) %>%
group_by(user_class) %>%
mutate(total_signups_in_class = sum(number_of_signups)) %>%
ungroup %>%
mutate(percent_of_signups = number_of_signups/total_signups_in_class) %>% {.$total_signups_in_class} %>% unique
user_facts_proxy_signup_date %>%
select(user_id, date) %>%
merge(
select(
top_user_facts
, user_id
, grep("in_top", colnames(top_user_facts))
)
) %>% #filter(user_id %in% standard_user_subset) %>%
group_by(date) %>%
{
dots <- as.list(paste("sum(", grep("in_top", colnames(top_user_facts), value = T), ")", sep =""))
names <- grep("in_top", colnames(top_user_facts), value = T)
dots <- c("n()", dots)
names <- c("all_users", names)
summarise_(.,
.dots = setNames(dots,names)
)
} %>%
{
dateframe <- data.frame(date = seq.Date(from = min(.$date), to = Sys.Date(), by = 1))
merge(., dateframe, all = T)
} %>%
{
.[is.na(.)] <- 0
return(.)
} %>%
melt(
id.vars = "date"
, variable.name = "user_class"
, value.name = "number_of_signups"
) %>%
group_by(user_class) %>%
mutate(total_signups_in_class = sum(number_of_signups)) %>%
ungroup %>%
mutate(percent_of_signups = number_of_signups/total_signups_in_class) %>% {.$total_signups_in_class} %>% unique
user_facts_proxy_signup_date %>%
select(user_id, date, account_type) %>%
merge(
select(
top_user_facts
, user_id
, grep("in_top", colnames(top_user_facts))
)
) %>% filter(account_type == "End User") %>%
group_by(date) %>%
{
dots <- as.list(paste("sum(", grep("in_top", colnames(top_user_facts), value = T), ")", sep =""))
names <- grep("in_top", colnames(top_user_facts), value = T)
dots <- c("n()", dots)
names <- c("all_users", names)
summarise_(.,
.dots = setNames(dots,names)
)
} %>%
{
dateframe <- data.frame(date = seq.Date(from = min(.$date), to = Sys.Date(), by = 1))
merge(., dateframe, all = T)
} %>%
{
.[is.na(.)] <- 0
return(.)
} %>%
melt(
id.vars = "date"
, variable.name = "user_class"
, value.name = "number_of_signups"
) %>%
group_by(user_class) %>%
mutate(total_signups_in_class = sum(number_of_signups)) %>%
ungroup %>%
mutate(percent_of_signups = number_of_signups/total_signups_in_class) %>% {.$total_signups_in_class} %>% unique
user_facts_proxy_signup_date %>%
select(user_id, date, account_type) %>%
merge(
select(
top_user_facts
, user_id
, grep("in_top", colnames(top_user_facts))
)
) %>% filter(account_type != "End User") %>% View
for(N in 1:length(top_users_list)){
user_facts %>%
filter(user_id %in% top_users_list[[N]]) %>%
filter(account_type == "End User") %>%
nrow %>%
{print(paste(., "end users in", names(top_users_list)[N]), sep = " ")}
}
source('~/Google Drive/Engagement_Metrics_IV/ms_segment_and_classify_4_0.R', echo=TRUE)
source('~/Google Drive/Engagement_Metrics_IV/ms_segment_and_classify_4_0.R', echo=TRUE)
path_user_platformaction_date_time = "input_csvs/user_date_time_platformaction"
path_user_facts = "input_csvs/user_signupdate_champid_accounttype_email"
path_to_allowed_actions = "input_csvs/platformaction_enduserallowed.csv"
path_to_champid_champname = "input_csvs/champid_champname"
path_platformaction_facts = "input_csvs/platformaction_facts.csv"
path_champid_isfirst = "input_csvs/user_date_time_platformaction_champid_isfirst"
path_program_starts = "input_csvs/program_starts"
path_programid_champid = "input_csvs/programid_champid"
path_assessment_starts = "input_csvs/assessment_engagement_metrics_IV"
path_assessmentid_champid = "input_csvs/assessmentid_champid"
path_userid_cohortid = "input_csvs/userid_cohortid"
path_cohortid_cohortname = "input_csvs/cohortid_cohortname"
user_date_time_platformaction_champid_isfirst <-
path_champid_isfirst %>%
name_as_looker_output %>%
grep(dir(recursive = T), value = T) %>%
read.table(
header = T
, sep = ','
, stringsAsFactors = F
) %>%
rename(
user_id = User.Dimensions.ID
, platform_action = User.Platform.Action.Facts.Platform.Action
, date = Date.Dimensions.Platform.Action.Date
, time = Date.Dimensions.Platform.Action.Time.of.Day
, champion_id = User.Connected.to.Champion.Dimensions.ID
, isfirst = User.Connected.to.Champion.Dimensions.Is.First.Champion..Yes...No.
) %>%
mutate(time = paste(time,":00",sep="")) %>%
mutate(datetime = chron(date, time, format = c('y-m-d','h:m:s'))) %>%
mutate(date = as.Date(date,format="%Y-%m-%d")) %>%
mutate(isfirst = (isfirst == "Yes"))
user_platformaction_date_time <-
path_user_platformaction_date_time %>%
name_as_looker_output %>%
grep(dir(recursive = T), value = T) %>%
read.table(
header = T
, sep = ','
, stringsAsFactors = F
) %>%
rename(
user_id = User.Dimensions.ID
, platform_action = User.Platform.Action.Facts.Platform.Action
, date = Date.Dimensions.Platform.Action.Date
, time = Date.Dimensions.Platform.Action.Time.of.Day
) %>%
mutate(time = paste(time,":00",sep="")) %>%
mutate(datetime = chron(date, time, format = c('y-m-d','h:m:s'))) %>%
mutate(date = as.Date(date,format="%Y-%m-%d")) %>%
merge(
user_date_time_platformaction_champid_isfirst
, all.x = T
) %>%
mutate(
isfirst = ifelse(is.na(isfirst), F, isfirst)
, platform_action = ifelse(isfirst, paste(platform_action, "(first)", sep = " "), platform_action)
)
cru_champions <- c(45,5,95,69,34,93,29,83,82)
champid_champname <- path_to_champid_champname %>%
name_as_looker_output %>%
grep(dir(recursive = T), value = T) %>%
read.table( header=TRUE
, sep=','
, stringsAsFactors = FALSE
, quote = ""
) %>%
rename(
champion_id = User.Connected.to.Champion.Dimensions.ID
, champion_name = User.Connected.to.Champion.Dimensions.Name
) %>%
{
rbind(.,
data.frame(
# X = c(0, -1) ,
champion_id = c(0, -1)
, champion_name = c("Ambiguous", "Ambiguous Internal")
)
)
} %>%
mutate(
dont.exclude = !(
grepl("Gloo", champion_name, ignore.case = T)
| grepl("Emily Shirk", champion_name, ignore.case = T)
| grepl("Fray", champion_name)
| grepl("Justin Vallelonga", champion_name)
| grepl("yolo", champion_name)
| grepl("Jimmy Mellado", champion_name)
| grepl("Scott Beck", champion_name)
| grepl("Justin's Champion", champion_name)
| grepl("Nico's Champion", champion_name)
| grepl("Smola", champion_name)
| grepl("Test Account", champion_name)
| grepl("_qa", champion_name)
| grepl("Champion Services", champion_name)
| grepl("Ambiguous", champion_name)
)
) %>%
mutate(
champion_organization =
ifelse(
champion_id %in% cru_champions
, "Cru"
, champion_name
)
) %>%
mutate(
champion_organization =
ifelse(
grepl("Ambiguous", champion_name)
, "Ambiguous"
, champion_name
)
)
user_signupdate_champid_accounttype_email <- path_user_facts  %>%
name_as_looker_output %>%
grep(dir(recursive = T), value = T) %>%
read.table(header=T, sep=",", stringsAsFactors=F) %>%
rename(
user_id = User.Dimensions.ID
, date = Date.Dimensions.Platform.Action.Date
, champion_id = User.Connected.to.Champion.Dimensions.ID
, account_type = User.Dimensions.Account.Type
, user_email = User.Dimensions.Email
) %>%
arrange(user_id) %>%
mutate(date = as.Date(date,format="%Y-%m-%d"))
platformaction_group_mode_enduserallowed <- path_platformaction_facts  %>%
read.table(header=T, sep=",", stringsAsFactors=F)
user_fakeenduser <-
merge(
user_platformaction_date_time
, select(platformaction_group_mode_enduserallowed
, platform_action
, end_user_allowed
)
) %>%
group_by(user_id) %>%
summarise(fake_end_user = (sum(!end_user_allowed) > 0))
user_signupdate_champid_accounttype_email_fakeenduser <-
user_signupdate_champid_accounttype_email %>%
merge(user_fakeenduser)
program_starts <- path_program_starts %>%
name_as_looker_output %>%
grep(dir(recursive = T), value = T) %>%
read.csv(
header=TRUE
, sep=','
, stringsAsFactors = FALSE
) %>%
rename(
user_id = User.Dimensions.ID
, program_id = Program.Dimensions.ID
, date = Date.Dimensions.Content.Progress.Date
, time = Date.Dimensions.Content.Progress.Time
) %>%
mutate(time = paste(time,":00",sep="")) %>%
mutate(datetime = chron(date, time, format = c('y-m-d','h:m:s'))) %>%
mutate(date = as.Date(date,format="%Y-%m-%d"))
program_starts <- path_program_starts %>%
name_as_looker_output %>%
grep(dir(recursive = T), value = T) %>%
read.csv(
header=TRUE
, sep=','
, stringsAsFactors = FALSE
) %>%
rename(
user_id = User.Dimensions.ID
, program_id = Program.Dimensions.ID
, date = Date.Dimensions.Content.Progress.Date
, time = Date.Dimensions.Content.Progress.Time
)
View(program_starts)
program_starts <- path_program_starts %>%
name_as_looker_output %>%
grep(dir(recursive = T), value = T) %>%
read.csv(
header=TRUE
, sep=','
, stringsAsFactors = FALSE
) %>%
rename(
user_id = User.Dimensions.ID
, program_id = Program.Dimensions.ID
, date = Date.Dimensions.Content.Progress.Date
, time = Date.Dimensions.Content.Progress.Time
) %>%
#      mutate(time = paste(time,":00",sep="")) %>%
mutate(datetime = chron(date, time, format = c('y-m-d','h:m:s'))) %>%
mutate(date = as.Date(date,format="%Y-%m-%d"))
program_starts <- path_program_starts %>%
name_as_looker_output %>%
grep(dir(recursive = T), value = T) %>%
read.csv(
header=TRUE
, sep=','
, stringsAsFactors = FALSE
) %>%
rename(
user_id = User.Dimensions.ID
, program_id = Program.Dimensions.ID
, date = Date.Dimensions.Content.Progress.Date
, time = Date.Dimensions.Content.Progress.Time
) %>%
mutate(time = substr(time, 12, 20))) %>%
mutate(datetime = chron(date, time, format = c('y-m-d','h:m:s'))) %>%
mutate(date = as.Date(date,format="%Y-%m-%d"))
program_starts <- path_program_starts %>%
name_as_looker_output %>%
grep(dir(recursive = T), value = T) %>%
read.csv(
header=TRUE
, sep=','
, stringsAsFactors = FALSE
) %>%
rename(
user_id = User.Dimensions.ID
, program_id = Program.Dimensions.ID
, date = Date.Dimensions.Content.Progress.Date
, time = Date.Dimensions.Content.Progress.Time
) %>%
mutate(time = substr(time, 12, 20)) %>%
mutate(datetime = chron(date, time, format = c('y-m-d','h:m:s'))) %>%
mutate(date = as.Date(date,format="%Y-%m-%d"))
source('~/Google Drive/Engagement_Metrics_IV/ms_segment_and_classify_4_0.R', echo=TRUE)
source('~/Google Drive/Engagement_Metrics_IV/ms_2_gloo_autoconnects.R', echo=TRUE)
source('~/Google Drive/Engagement_Metrics_IV/ms_plots_for_presentation_v2.R', echo=TRUE)
user_facts_truefirst <-
read.table(
"user_table_true_first.csv"
, header=TRUE
, sep=','
, stringsAsFactors = FALSE
) %>%
mutate(date = as.Date(date,format="%Y-%m-%d"))
standard_user_subset_truefirst <- user_facts_truefirst
merge(select(champion_facts, champion_id, dont.exclude)) %>%
filter(
dont.exclude
,
#    !fake_end_user
#    ,
account_type == "End User"
) %>%
{.$user_id}
standard_user_subset_truefirst <- user_facts_truefirst %>%
merge(select(champion_facts, champion_id, dont.exclude)) %>%
filter(
dont.exclude
,
#    !fake_end_user
#    ,
account_type == "End User"
) %>%
{.$user_id}
standard_user_subset_truefirst %>% length
standard_user_subset %>% length
source('~/Google Drive/Engagement_Metrics_IV/ms_plots_for_presentation_v2.R', echo=TRUE)
source('~/Google Drive/Engagement_Metrics_IV/ms_plots_for_presentation_v2.R', echo=TRUE)
core_to_new_data <- MAU_bar_data_absolute %>%
mutate(core_to_new_user_ratio = Core/New)
View(core_to_new_data)
core_to_new_data %>%
plot_ly(x = date, y = core_to_new_user_ratio, type = "scatter")
core_to_new_data %>%
plot_ly(x = date, y = core_to_new_user_ratio, type = "scatter") %>%
bar_chart_layout(
charttitle = "Ratio of Core Users to New Users"
, yaxisrange = NULL
, yaxisformat = "%"
)
core_to_new_data %>%
plot_ly(
x = date
, y = core_to_new_user_ratio
, type = "scatter"
, text = round(core_to_new_user_ratio, 2)
) %>%
bar_chart_layout(
charttitle = "Ratio of Core Users to New Users"
, yaxisrange = NULL
, yaxisformat = "%"
) %>%
s
core_to_new_data %>%
plot_ly(
x = date
, y = core_to_new_user_ratio
, type = "scatter"
, text = round(core_to_new_user_ratio, 2)
) %>%
bar_chart_layout(
charttitle = "Ratio of Core Users to New Users"
, yaxisrange = NULL
, yaxisformat = "%"
)
core_to_new_data %>%
plot_ly(
x = date
, y = core_to_new_user_ratio
, type = "scatter"
, text = percent(round(100*core_to_new_user_ratio, 2))
) %>%
bar_chart_layout(
charttitle = "Ratio of Core Users to New Users"
, yaxisrange = NULL
, yaxisformat = "%"
)
core_to_new_data %>%
plot_ly(
x = date
, y = core_to_new_user_ratio
, type = "scatter"
, text = round(percent(core_to_new_user_ratio), 1)
) %>%
bar_chart_layout(
charttitle = "Ratio of Core Users to New Users"
, yaxisrange = NULL
, yaxisformat = "%"
)
core_to_new_data %>%
plot_ly(
x = date
, y = core_to_new_user_ratio
, type = "scatter"
, text = percent(round(core_to_new_user_ratio, 2))
) %>%
bar_chart_layout(
charttitle = "Ratio of Core Users to New Users"
, yaxisrange = NULL
, yaxisformat = "%"
)
core_to_new_data %>%
plot_ly(
x = date
, y = core_to_new_user_ratio
, type = "scatter"
, text = percent(round(core_to_new_user_ratio, 3))
) %>%
bar_chart_layout(
charttitle = "Ratio of Core Users to New Users"
, yaxisrange = NULL
, yaxisformat = "%"
)
core_to_new_data %>%
plot_ly(
x = date
, y = core_to_new_user_ratio
, type = "scatter"
, text = percent(round(core_to_new_user_ratio, 3))
, mode = "text"
) %>%
bar_chart_layout(
charttitle = "Ratio of Core Users to New Users"
, yaxisrange = NULL
, yaxisformat = "%"
)
core_to_new_data %>%
plot_ly(
x = date
, y = core_to_new_user_ratio
, type = "scatter"
, text = percent(round(core_to_new_user_ratio, 3))
, hoverinfo = "text"
) %>%
bar_chart_layout(
charttitle = "Ratio of Core Users to New Users"
, yaxisrange = NULL
, yaxisformat = "%"
)
plot.name <- "Core_to_New_User_Ratio"
core_to_new_data %>%
plot_ly(
x = date
, y = core_to_new_user_ratio
, type = "scatter"
, text = percent(round(core_to_new_user_ratio, 3))
, hoverinfo = "text"
) %>%
bar_chart_layout(
charttitle = "Ratio of Core Users to New Users"
, yaxisrange = NULL
, yaxisformat = "%"
) %>%
save_or_print(
save_plots = save.plots
, outloc = out.loc
, plot_name = plot.name
, outformat = out.format
)
source('~/Google Drive/Engagement_Metrics_IV/ms_new_platform_actions.R', echo=TRUE)
source('~/Google Drive/Engagement_Metrics_IV/ms_platformaction_distributions.R', echo=TRUE)
source('~/Google Drive/Engagement_Metrics_IV/ms_platformaction_distributions.R', echo=TRUE)
source('~/Google Drive/Engagement_Metrics_IV/ms_platformaction_distributions.R', echo=TRUE)
View(chisquare_analysis)
source('~/Google Drive/Engagement_Metrics_IV/ms_platformaction_distributions.R', echo=TRUE)
source('~/Google Drive/Engagement_Metrics_IV/ms_platformaction_distributions.R', echo=TRUE)
source('~/Google Drive/Engagement_Metrics_IV/ms_platformaction_distributions.R', echo=TRUE)
source('~/Google Drive/Engagement_Metrics_IV/ms_platformaction_distributions.R', echo=TRUE)
source('~/Google Drive/Engagement_Metrics_IV/ms_platformaction_distributions.R', echo=TRUE)
